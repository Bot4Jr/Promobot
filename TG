#!/usr/bin/env bash

THIS_DIR=$(cd "$(dirname "$0")"; pwd)
cd "$THIS_DIR"

function logo() {
    declare -A logo
    seconds="0.002"
logo[0]="  .          '||    ||' '||'''|  '||    ||' '||'|.  '||'''|  '||''|."
logo[1]=".||.   ... .  |||  |||   || .     |||  |||   ||  ||  || .     ||   ||"
logo[2]=" ||   || ||   |'|..'||   ||'|     |'|..'||   ||''|.  ||'|     ||''|'"
logo[3]=" ||    |''    | '|' ||   ||       | '|' ||   ||   || ||       ||   |."
logo[4]=" '|.' '|||.  .|. | .||. .||....| .|. | .||. .||..|' .||....| .||.  '|'"
logo[5]="    .|...'"
logo[6]=""
logo[7]="Channel : @tgMember"
logo[8]="Develop by @sajjad_021"
printf "\e[38;5;213m\t"
    for i in ${!logo[@]}; do
        for x in `seq 0 ${#logo[$i]}`; do
            printf "${logo[$i]:$x:1}"
            sleep $seconds
        done
        printf "\n\t"
    done
printf "\n"
}

function update() {
  sudo git pull
  sudo git fetch --all
  sudo git reset --hard origin/master
  sudo git pull origin master
  sudo chmod +x TG
}

function installation() {
sudo apt update -y &&\
sudo apt-get install -y\
	git\
	wget\
	openssl\
	coreutils\
	make\
	gcc\
	libreadline-dev\
	libssl-dev\
	redis-server\
	libssl-dev\
	unzip\
	libexpat1-dev\
	libconfig-dev\
	tmux\
	lua5.2\
	liblua5.2-dev\
	lua-socket\
	lua-sec\
	lua-expat\
	libevent-dev\
	autoconf\
	g++\
	libjansson-dev\
	expat\
	luarocks
}

function luarocks_install() {
  git clone https://github.com/keplerproject/luarocks.git
  cd luarocks
  git checkout tags/v2.4.0 # Current stable

  PREFIX="$HOME/.luarocks"

  ./configure --prefix="$PREFIX" --sysconfdir="$PREFIX"/luarocks --force-config
  make build
	sudo make install

cd ..
rm -rf luarocks
}

install_rocks() {
 for i in luasec luasocket redis-lua luaossl lbase64; do
    "$HOME"/.luarocks/bin/luarocks install "$i"
  done
}

tgcli_config() {
tgdr="$THIS_DIR"/.TG-$1
if [ ! -d $tgdr ]; then
  mkdir -p "$THIS_DIR"/.TG-$1
  printf '%s\n' "
default_profile = \"TG-$1\";
TG-$1 = {
  config_directory = \"$THIS_DIR/.TG-$1\";
  auth_file = \"$THIS_DIR/.TG-$1/auth\";
  test = false;
  msg_num = true;
  log_level = 2;
};
" > "$THIS_DIR"/.TG-$1/tg-cli.config
fi
}

conf1() {
  cli="$THIS_DIR"/.TG-$1/TG-$1.lua
if [[ ! -f "$THIS_DIR"/.TG-$1/"$cli" ]]; then
echo "package.path = package.path..';../.luarocks/share/lua/5.2/?.lua;../.luarocks/share/lua/5.2/?/init.lua'
package.cpath = package.cpath..';../.luarocks/lib/lua/5.2/?.so'

redis = require('redis')
redis = redis.connect('127.0.0.1', 6379)

Ads_id = '$1'

require('TG')

function dl_cb (arg, data)
end

function tdcli_update_callback(data)
	Doing(data, Ads_id)
end" >> $cli
fi
}

conf3() {
AP="$THIS_DIR"/AP-$1
if [ ! -f $AP ]; then
 echo -e "\n\033[38;5;27mYou must enter the token to create API robot : \n\033[38;5;208m\n\033[6;48m\n"
read -rp '' TKN
 echo "#!/bin/bash
	while true; do
       		sudo tmux kill-session -t AP-$1
			tmux new-session -s AP-$1 './telegram-cli -s ./.TG-$1/TG-$1.lua -p AP-$1 --bot=$TKN'
        	sudo tmux detach -s AP-$1
	done" >> AP-$1
	chmod 777 AP-$1
echo -e "\n\033[0;00m\n"
fi
}

if [[ "$1" =~ ^[0-9]+$ ]] ; then
 tgcli_config $1
 conf1 $1
 conf3 $1
  while true; do
       sudo tmux kill-session -t TG-$1
		sudo tmux new-session -s TG-$1 "./telegram-cli --disable-link-preview -R -C -v -s ./.TG-$1/TG-$1.lua -I -l 1 -E -c ./.TG-$1/tg-cli.config -p TG-$1 -L "$THIS_DIR"/.TG-$1/log.txt"
        sudo tmux detach -s TG-$1
  done
fi

if [ "$1" = "upgrade" ]; then
update
fi

if [ ! -f "telegram-cli" ]; then
	logo
	installation
	luarocks_install
	install_rocks
	wget "https://valtman.name/files/telegram-cli-1214"
	mv telegram-cli-1214 telegram-cli; chmod +x telegram-cli; chmod 777 TG
fi

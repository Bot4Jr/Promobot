#!/bin/bash

THIS_DIR=$(cd $(dirname $0); pwd)

logo() {
    declare -A logo
    seconds="0.004"
logo[0]="  .          '||    ||' '||'''|  '||    ||' '||'|.  '||'''|  '||''|."
logo[1]=".||.   ... .  |||  |||   || .     |||  |||   ||  ||  || .     ||   ||"
logo[2]=" ||   || ||   |'|..'||   ||'|     |'|..'||   ||''|.  ||'|     ||''|'"
logo[3]=" ||    |''    | '|' ||   ||       | '|' ||   ||   || ||       ||   |."
logo[4]=" '|.' '|||.  .|. | .||. .||....| .|. | .||. .||..|' .||....| .||.  '|'"
logo[5]="    .|...'"
logo[6]="➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖"
logo[7]="Channel : @tgMember"
logo[8]="Develop by @sajjad_021"
printf "\e[38;5;213m\t"
    for i in ${!logo[@]}; do
        for x in `seq 0 ${#logo[$i]}`; do
            printf "${logo[$i]:$x:1}"
            sleep $seconds
        done
        printf "\n\t"
    done
printf "\n"
}

tgcli_version=1214
luarocks_version=2.4.2

lualibs=(
'redis-lua'
)

today=`date +%F`

get_sub() {
    local flag=false c count cr=$'\r' nl=$'\n'
    while IFS='' read -d '' -rn 1 c; do
        if $flag; then
            printf '%c' "$c"
        else
            if [[ $c != $cr && $c != $nl ]]; then
                count=0
            else
                ((count++))
                if ((count > 1)); then
                    flag=true
                fi
            fi
        fi
    done
}

make_progress() {
exe=`lua <<-EOF
    print(tonumber($1)/tonumber($2)*100)
EOF
`
    echo ${exe:0:4}
}

function download_libs_lua() {
    if [[ ! -d "logs" ]]; then mkdir logs; fi
    if [[ -f "logs/logluarocks_${today}.txt" ]]; then rm logs/logluarocks_${today}.txt; fi
    local i
    for ((i=0;i<${#lualibs[@]};i++)); do
        printf "\r\33[2K"
        printf "\rtgAds: wait... [`make_progress $(($i+1)) ${#lualibs[@]}`%%] [$(($i+1))/${#lualibs[@]}] ${lualibs[$i]}"
        ./.luarocks/bin/luarocks install ${lualibs[$i]} &>> logs/logluarocks_${today}.txt
    done
    sleep 0.2
    printf "\nLogfile created: $PWD/logs/logluarocks_${today}.txt\nDone\n"
    rm -rf luarocks-2.2.2*
}

function update() {
  sudo git pull
  sudo git fetch --all
  sudo git reset --hard origin/master
  sudo git pull origin master
  sudo chmod +x TG
}

tg() {
 wget --progress=bar:force https://valtman.name/files/telegram-cli-${tgcli_version} 2>&1 | get_sub
        mv telegram-cli-${tgcli_version} telegram-cli; chmod +x telegram-cli
}

function configure() {
    if [[ -f "/usr/bin/lua5.3" ]] || [[ -f "/usr/bin/lua5.1" ]] || [[ -f "/usr/local/bin/lua5.3" ]]; then
    	sudo apt remove -y lua5.3
        echo -e "\033[0;31mplease wait...\033[0m\n"
     fi
    dir=$HOME
    wget http://luarocks.org/releases/luarocks-${luarocks_version}.tar.gz &>/dev/null
    tar zxpf luarocks-${luarocks_version}.tar.gz &>/dev/null
    cd luarocks-${luarocks_version}
    if [[ ${1} == "--no-null" ]]; then
        ./configure --prefix=$dir/.luarocks --sysconfdir=$dir/.luarocks/luarocks --force-config
        make bootstrap
    else
        ./configure --prefix=$dir/.luarocks --sysconfdir=$dir/.luarocks/luarocks --force-config &>/dev/null
        make bootstrap &>/dev/null
    fi
    cd ..; rm -rf luarocks*
    if [[ ${1} != "--no-download" ]]; then
        download_libs_lua
    fi
    for ((i=0;i<101;i++)); do
        printf "\rConfiguring... [%i%%]" $i
        sleep 0.007
    done
    printf "\nDone\n"
}

install() {
    sudo chmod 777 TG
    cd ..
		  sudo apt update -y && apt upgrade -y
  sudo apt-get install -f
	sudo dpkg -a --configure
	sudo apt-get dist-upgrade
	sudo sudo apt-get dist-upgrade
 echo -e "\e\n[38;5;035mUpdating packages\e\n\n"
		     sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  sudo apt-get install c++ -y libreadline-dev -y libstdc++6 -y libnotify-dev -y libconfig-dev -y lua-lgi -y luarocks -y libssl-dev -y lua5.2 -y liblua5.2-dev -y libevent-dev -y libjansson-dev -y libpython-dev -y lua-socket -y lua-sec -y lua-expat -y make unzip git redis-server autoconf g++ -y expat libexpat1-dev -y
  echo -e "\\e[38;5;129mInstalling dependencies\e"
	  sudo apt install -y torsocks
	  sudo systemctl daemon-reload
	  sudo systemctl restart tor.service
	  sudo apt install -y tor
	  sudo systemctl daemon-reload
	  sudo systemctl restart tor.service
	  sudo apt install -y polipo
	  sudo systemctl daemon-reload
	  sudo systemctl restart tor.service
	  sudo systemctl start tor.service
	  sudo cat /var/log/tor/log
rm -rf README.md
cd $HOME
    configure ${2}
    cd $THIS_DIR
   rm -rf logs
  sudo apt -y autoremove
  sudo service redis-server restart
  sudo service redis-server start
 echo -e "\n\nNow, you can run your bot by => \033[38;5;123m./TG 1~9\033[0;00m <= command"
 echo -e "for example: ./TG 1\n\n"
 echo -e "\n\nyou can use anticrash by => \033[38;5;142mscreen -S nohup ./TG 1~9\033[0;00m <= command"
 echo -e "for example: screen -S nohup ./TG 7\n\n"
 echo -e "\nsee help and other opthin type \033[38;5;208m./TG\033[0;00m\n"
}

inf() {
memTotal_b=`free -b |grep Mem |awk '{print $2}'`
memFree_b=`free -b |grep Mem |awk '{print $4}'`
memBuffer_b=`free -b |grep Mem |awk '{print $6}'`
memCache_b=`free -b |grep Mem |awk '{print $7}'`

memTotal_m=`free -m |grep Mem |awk '{print $2}'`
memFree_m=`free -m |grep Mem |awk '{print $4}'`
memBuffer_m=`free -m |grep Mem |awk '{print $6}'`
memCache_m=`free -m |grep Mem |awk '{print $7}'`
CPUPer=`top -b -n1 | grep "Cpu(s)" | awk '{print $2 + $4}'`
uptime=`uptime`
ProcessCnt=`ps -A | wc -l`
memUsed_b=$(($memTotal_b-$memFree_b-$memBuffer_b-$memCache_b))
memUsed_m=$(($memTotal_m-$memFree_m-$memBuffer_m-$memCache_m))
memUsedPrc=$((($memUsed_b*100)/$memTotal_b))
echo -e "➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖\033[38;5;208mServer Information\033[0;00m➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖"
echo ">Total Ram : $memTotal_m MB  Ram in use : $memUsed_m MB - $memUsedPrc% used!"
echo '>Cpu in use : '"$CPUPer"'%'
echo '>Server Uptime : '"$uptime"
}

cln()  {
 sudo service redis-server start
echo ">> Enter the ADS-ID,that you wanna delete :"
  read -rp ' ' ID
  rm -rf ~/.telegram-cli/TG-"$ID"
  rm -rf .TG-"$ID"
  rm -rf AP-"$ID"
  redis-cli --raw keys "tg:"-$ID* | xargs redis-cli del
  echo ">> Bot number '$ID' seccessfuly deleted."
}

menu() {
echo -e "➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖\033[38;5;208mMENU\033[0;00m➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖"
echo -e "1 => \033[38;5;208mInstall\033[0;00m"
echo -e "2 => \033[38;5;208mUpgrade\033[0;00m"
echo -e "3 => \033[38;5;208mTrun Off All Robot's\033[0;00m"
echo -e "4 => \033[38;5;208mReturn last session\033[0;00m"
echo -e "5 => \033[38;5;208mServer info\033[0;00m"
echo -e "6 => \033[38;5;208mRemove bot\033[0;00m"
echo -e "0 => \033[38;5;208mExit\033[0;00m"
echo -e "\033[38;5;208m  ➖  ➖  ➖➖➖➖➖➖  ➖  ➖  ➖  \033[0;00m"
echo '>Channel : '"@tgMember"
echo '>Develop by '"@sajjad_021"
# Options in ./TG <option>
read VAR
if [ "$VAR" = 1 ]; then
  clear
  logo
  install
  menu
elif [ "$VAR" = 2 ]; then
 update
elif [ "$VAR" = 3 ]; then
	sudo killall screen
  sudo killall tmux
	sudo service redis-server restart
	sudo service redis-server start
	sudo killall telegram-cli
	echo -e '\e[34mSessions closed\e[0m'
	menu
elif [ "$VAR" = 4 ]; then
	tmux attach-session -t $THIS_DIR
elif [ "$VAR" = 5 ]; then
	inf
elif [ "$VAR" = 6 ]; then
cln
menu
elif [ "$VAR" = 0 ]; then
	exit
elif [ "$VAR" = "" ]; then
	echo -e '\e[31mOpcion invalida\e[0m'
	else
	echo -e '\e[31mOpcion invalida\e[0m'
fi
}

if [ "$1" = "info" ]; then
	log
	inf
fi

if [ "$1" = "help" ]; then
menu
fi

tgcli_config() {
tgdr="$THIS_DIR"/.TG-$1
if [ ! -d $tgdr ]; then
  mkdir -p "$THIS_DIR"/.TG-$1
  printf '%s\n' "
default_profile = \"TG-$1\";
TG-$1 = {
  config_directory = \"$THIS_DIR/.TG-$1\";
  auth_file = \"$THIS_DIR/.TG-$1/auth\";
  test = false;
  msg_num = true;
  log_level = 2;
};
" > "$THIS_DIR"/.TG-$1/tg-cli.config
fi
}

conf1() {
  cli="$THIS_DIR"/.TG-$1/TG-$1.lua
	if [[ ! -f "$THIS_DIR"/.TG-$1/"$cli" ]]; then
		cat main.lua >> $cli
		sed -i 's/ADS-ID/'$1'/g' $cli
	fi
}

conf3() {
AP="$THIS_DIR"/AP-$1
if [ ! -f $AP ]; then
echo -e "\n\033[38;5;27mYou must enter the token to create API robot : \n\033[38;5;208m\n\033[6;48m\n"
read -rp '' TKN
    echo "#!/bin/bash
	while true; do
       sudo tmux kill-session -t AP-$1
			tmux new-session -s AP-$1 "./telegram-cli -s ./.TG-$1/TG-$1.lua -p AP-$1 --bot=$TKN"
        sudo tmux detach -s AP-$1
	done" >> AP-$1
	chmod 777 AP-$1
	echo -e "\033[0;00m"
fi
}

 if [[ "$1" =~ ^[0-9]+$ ]] ; then
 	tgcli_config $1
	conf1 $1
	conf3 $1
  while true; do
       sudo tmux kill-session -t TG-$1
		sudo tmux new-session -s TG-$1 "./telegram-cli --disable-link-preview -R -C -v -s ./.TG-$1/TG-$1.lua -I -l 1 -E -c ./.TG-$1/tg-cli.config -p TG-$1 -L "$THIS_DIR"/.TG-$1/log.txt"
        sudo tmux detach -s TG-$1
  done
fi

if [ "$1" = "upgrade" ]; then
update
fi

if [ ! -f "telegram-cli" ]; then
    install
	else
    menu
fi

#!/bin/bash

THIS_DIR=$(cd $(dirname $0); pwd)
cd $THIS_DIR

logo() {
    declare -A logo
    seconds="0.004"
logo[0]="  .          '||    ||' '||'''|  '||    ||' '||'|.  '||'''|  '||''|."
logo[1]=".||.   ... .  |||  |||   || .     |||  |||   ||  ||  || .     ||   ||"
logo[2]=" ||   || ||   |'|..'||   ||'|     |'|..'||   ||''|.  ||'|     ||''|'"
logo[3]=" ||    |''    | '|' ||   ||       | '|' ||   ||   || ||       ||   |."
logo[4]=" '|.' '|||.  .|. | .||. .||....| .|. | .||. .||..|' .||....| .||.  '|'"
logo[5]="    .|...'"
logo[6]="➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖"
logo[7]="Channel : @tgMember"
logo[8]="Develop by @sajjad_021"
printf "\e[38;5;213m\t"
    for i in ${!logo[@]}; do
        for x in `seq 0 ${#logo[$i]}`; do
            printf "${logo[$i]:$x:1}"
            sleep $seconds
        done
        printf "\n\t"
    done
printf "\n"
}

tgcli_version=1215
luarocks_version=2.4.2

lualibs=(
'luasec'
'lbase64 20120807-3'
'luafilesystem'
'redis-lua'
'lua-cjson'
'dkjson'
'serpent'
)

today=`date +%F`

get_sub() {
    local flag=false c count cr=$'\r' nl=$'\n'
    while IFS='' read -d '' -rn 1 c; do
        if $flag; then
            printf '%c' "$c"
        else
            if [[ $c != $cr && $c != $nl ]]; then
                count=0
            else
                ((count++))
                if ((count > 1)); then
                    flag=true
                fi
            fi
        fi
    done
}

make_progress() {
exe=`lua <<-EOF
    print(tonumber($1)/tonumber($2)*100)
EOF
`
    echo ${exe:0:4}
}



function download_libs_lua() {
    if [[ ! -d "logs" ]]; then mkdir logs; fi
    if [[ -f "logs/logluarocks_${today}.txt" ]]; then rm logs/logluarocks_${today}.txt; fi
    local i
    for ((i=0;i<${#lualibs[@]};i++)); do
        printf "\r\33[2K"
        printf "\rtgAds: wait... [`make_progress $(($i+1)) ${#lualibs[@]}`%%] [$(($i+1))/${#lualibs[@]}] ${lualibs[$i]}"
        ./.luarocks/bin/luarocks install ${lualibs[$i]} &>> logs/logluarocks_${today}.txt
    done
    sleep 0.2
    printf "\nLogfile created: $PWD/logs/logluarocks_${today}.txt\nDone\n"
    rm -rf luarocks-2.2.2*
}

function update() {
  git pull
  git fetch --all
  git reset --hard origin/master
  git pull origin master
  chmod +x TG
}

function configure() {
    if [[ -f "/usr/bin/lua5.3" ]] || [[ -f "/usr/bin/lua5.1" ]] || [[ -f "/usr/local/bin/lua5.3" ]]; then
	sudo apt remove -y lua5.1
    	sudo apt remove -y lua5.3
	sudo apt -y autoremove
	sudo apt install -y lua5.2
      else
        echo -e "\033[0;31mError\033[0m":\
        "tgAds ins't working with lua5.3 and others versions, the packages must be removed,"\
        "please remove them, reinstall lua5.2 and run launch.sh again."
        exit 1 
     fi
    dir=$PWD
    wget http://luarocks.org/releases/luarocks-${luarocks_version}.tar.gz &>/dev/null
    tar zxpf luarocks-${luarocks_version}.tar.gz &>/dev/null
    cd luarocks-${luarocks_version}
    if [[ ${1} == "--no-null" ]]; then
        ./configure --prefix=$dir/.luarocks --sysconfdir=$dir/.luarocks/luarocks --force-config
        make bootstrap
    else
        ./configure --prefix=$dir/.luarocks --sysconfdir=$dir/.luarocks/luarocks --force-config &>/dev/null
        make bootstrap &>/dev/null
    fi
    cd ..; rm -rf luarocks*
    if [[ ${1} != "--no-download" ]]; then
        download_libs_lua
        wget --progress=bar:force https://valtman.name/files/telegram-cli-${tgcli_version} 2>&1 | get_sub
        if [ ! -d ".bin" ]; then mkdir .bin; fi
        mv telegram-cli-${tgcli_version} ./.bin/telegram-cli; chmod +x ./.bin/telegram-cli
    fi
    for ((i=0;i<101;i++)); do
        printf "\rConfiguring... [%i%%]" $i
        sleep 0.007
    done
    printf "\nDone\n"
}

install() {
sudo apt -y update
sudo apt remove -y lua5.1
sudo apt remove -y lua5.3
sudo apt -y autoremove
sudo apt install -y lua5.2
sudo apt -y autoclean
chmod 777 TG
logo
 echo -e "\033[38;5;034m\ninstall pkg\033[0;00m\n"
sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y; sudo apt-get autoclean; sudo apt-get update
rm -rf README.md
sudo apt-get install git redis-server libconfig8-dev libjansson-dev lua5.2 liblua5.2-dev lua-lgi glib-2.0 libnotify-dev libssl-dev libssl1.0.0 make libstdc++6 g++-4.9 unzip libreadline-gplv2-dev libreadline5-dev tmux -y
 echo -e "\033[38;5;034m\nconfig and install\033[0;00m\n"
configure ${2}
 echo -e "\033[38;5;034m\nSuccessful install\033[0;00m\n"
rm -rf logs
service redis-server restart
service redis-server start
logo
 echo -e "\n\nNow, you can run your bot by => \033[38;5;123m./TG 1~9\033[0;00m <= command"
 echo -e "for example: ./TG 1\n\n"
 echo -e "\n\nyou can use anticrash by => \033[38;5;142mscreen -S nohup ./TG 1~9\033[0;00m <= command"
 echo -e "for example: screen -S nohup ./TG 7\n\n"
}

conf() {
	cfg="$THIS_DIR"/.bin/TG-$1.cfg
	TG="$THIS_DIR"/.bin/TG-$1.lua
	if [[ ! -f TG-$1.cfg ]]; then
		echo "default_profile = \"TG-$1\";TG-$1 = {config_directory = \"$HOME/.telegram-cli/TG-$1\";test = false;msg_num = true;};" >> $cfg
	fi
	if [[ ! -f $TG ]]; then
		cat main.lua >> TG-$1.lua
		sed -i 's/ADS-ID/'$1'/g' TG-$1.lua
	fi
}

if [[ "$1" =~ ^[0-9]+$ ]] ; then
	conf $1
COUNTER=0
  while [ $COUNTER -lt 5 ]; do
       tmux kill-session -t TG-$1
	        tmux new-session -s TG-$1 "./.bin/telegram-cli -pc ./.bin/TG-$1.cfg -s TG-$1.lua -WIv -P 1080 --disable-link-preview -C -R -D -e --accept-any-tcp --permanent-msg-ids --json -l 1 -E $@"
        tmux detach -s TG-$1
    sleep 1
  done
fi

if [ "$1" = "upgrade" ]; then
update
install
fi

if [ ! -f "./.bin/telegram-cli" ]; then
      install
	else
    echo -e "\033[38;5;208mThe tgAds robot installed.\033[0;00m"
    read -p "Do you want to upGrade? [y/n] = "
	if [ "$REPLY" == "y" ] || [ "$REPLY" == "Y" ]; then
					update
					install
     elif [ "$REPLY" == "n" ] || [ "$REPLY" == "N" ]; then
        exit 1
  fi
fi

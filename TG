#!/bin/bash

THIS_DIR=$(cd $(dirname $0); pwd)
cd $THIS_DIR

logo() {
    declare -A logo
    seconds="0.004"
logo[0]="  .          '||    ||' '||'''|  '||    ||' '||'|.  '||'''|  '||''|."
logo[1]=".||.   ... .  |||  |||   || .     |||  |||   ||  ||  || .     ||   ||"
logo[2]=" ||   || ||   |'|..'||   ||'|     |'|..'||   ||''|.  ||'|     ||''|'"
logo[3]=" ||    |''    | '|' ||   ||       | '|' ||   ||   || ||       ||   |."
logo[4]=" '|.' '|||.  .|. | .||. .||....| .|. | .||. .||..|' .||....| .||.  '|'"
logo[5]="    .|...'"
logo[6]="➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖"
logo[7]="Channel : @tgMember"
logo[8]="Develop by @sajjad_021"
printf "\e[38;5;213m\t"
    for i in ${!logo[@]}; do
        for x in `seq 0 ${#logo[$i]}`; do
            printf "${logo[$i]:$x:1}"
            sleep $seconds
        done
        printf "\n\t"
    done
printf "\n"
}

update() {
git fetch --all && git reset --hard origin/master && git pull origin master && chmod +x TG
}

inspkg() {
	instll="git redis-server libreadline-dev libconfig-dev lua-socket lua-sec lua-expat libevent-dev libconfig8-dev libjansson-dev lua5.2 liblua5.2-dev lua-lgi glib-2.0 libnotify-dev libssl-dev libssl1.0.0 make libstdc++6 g++-4.9 unzip autoconf g++ libpython-dev expat libexpat1-dev libreadline-gplv2-dev libreadline5-dev tmux g++-4.7 c++-4.7 torsocks tor polipo upstart screen wget"
   for libs in $instll; do
       sudo apt-get install -y $libs
    done
}

install_luarocks() {
 echo -e "\e[38;5;142mInstalling LuaRocks\e"
  git clone https://github.com/luarocks/luarocks.git -b 2.3.0
  cd luarocks
  git checkout tags/v2.4.2 # Current stable

  PREFIX="$THIS_DIR/.luarocks"

  ./configure --prefix=$PREFIX --sysconfdir=$PREFIX/luarocks --force-config
   make build && make install
cd ..
  rm -rf luarocks
}

install_rocks() {
echo -e "\e[38;5;105mInstall rocks service\e"
rocks="luasec https://luarocks.org/luasec-0.6-1.rockspec dkjson lbase64 luafilesystem luasocket redis-lua serpent"
	for rock in $rocks; do
      sudo ./.luarocks/bin/luarocks install $rock
    done
}

tg() {
  wget --progress=bar:force https://valtman.name/files/telegram-cli-1215
  mv telegram-cli-1215 telegram-cli; chmod +x telegram-cli
}

conf() {
	mkdir -p "$THIS_DIR"/.bin/TG-"$1"
	cfg="$THIS_DIR"/.bin/TG-$1/TG.cfg
	TG="$THIS_DIR"/.bin/TG-$1.lua
	if [[ ! -f $cfg ]]; then
		echo "default_profile = \"TG-$1\";TG-$1 = {config_directory = \"$THIS_DIR/.bin/TG-$1\";test = false;msg_num = true;};" >> $cfg
	fi
	if [[ ! -f $TG ]]; then
		cat main.lua >> TG-$1.lua
		sed -i 's/ADS-ID/'$1'/g' TG-$1.lua
		mv TG-$1.lua ./.bin
	fi
}

install() {
logo
rm -rf README.md
echo -e "\e[38;5;035mUpdating packages\e"
   sudo apt-get update -y
   sudo apt-get upgrade -y
	sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
	chmod 777 TG
cd .bin
inspkg
sudo apt remove -y lua5.1
sudo apt remove -y lua5.3
sudo apt install -y lua5.2
install_luarocks
  echo -e "\e[38;5;034mDownload libs\e"
install_rocks
tg
cd ..
 sudo apt-get update -y
 sudo apt-get upgrade -y
 sudo apt-get autoremove -y
 sudo apt-get autoclean -y
logo
 echo -e "\033[38;5;034m\nSuccessful install\033[0;00m\n"
 echo -e "\n\nNow, you can run your bot by => \033[38;5;123m./TG 1~9\033[0;00m <= command"
 echo -e "for example: ./TG 1\n\n"
 echo -e "\n\nyou can use anticrash by => \033[38;5;142mscreen -S nohup ./TG 1~9\033[0;00m <= command"
 echo -e "for example: screen -S nohup ./TG 7\n\n"
}

if [[ "$1" =~ ^[0-9]+$ ]] ; then
	conf $1
COUNTER=0
  while [ $COUNTER -lt 5 ]; do
       tmux kill-session -t TG-$1
	        tmux new-session -s TG-$1 "./.bin/telegram-cli -pc ./.bin/TG-$1/TG.cfg -WRCIvs ./.bin/TG-$1.lua -P 1080 --accept-any-tcp --permanent-msg-ids --json -l 1 -E $@"
        tmux detach -s TG-$1
    sleep 1
  done
fi

if [ "$1" = "upgrade" ]; then
update
install
fi

if [ ! -d ".bin" ]; then
		mkdir .bin
		install
	else
    echo -e "\033[38;5;208mThe tgAds robot installed.\033[0;00m"
    read -p "Do you want to upGrade? [y/n] = "
	if [ "$REPLY" == "y" ] || [ "$REPLY" == "Y" ]; then
					update
					install
     elif [ "$REPLY" == "n" ] || [ "$REPLY" == "N" ]; then
        exit 1
  fi
fi

#!/bin/bash

THIS_DIR=$(cd $(dirname $0); pwd)
cd $THIS_DIR

logo() {
    declare -A logo
    seconds="0.004"
logo[0]="  .          '||    ||' '||'''|  '||    ||' '||'|.  '||'''|  '||''|."
logo[1]=".||.   ... .  |||  |||   || .     |||  |||   ||  ||  || .     ||   ||"
logo[2]=" ||   || ||   |'|..'||   ||'|     |'|..'||   ||''|.  ||'|     ||''|'"
logo[3]=" ||    |''    | '|' ||   ||       | '|' ||   ||   || ||       ||   |."
logo[4]=" '|.' '|||.  .|. | .||. .||....| .|. | .||. .||..|' .||....| .||.  '|'"
logo[5]="    .|...'"
logo[6]="➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖"
logo[7]="Channel : @tgMember"
logo[8]="Develop by @sajjad_021"
printf "\e[38;5;213m\t"
    for i in ${!logo[@]}; do
        for x in `seq 0 ${#logo[$i]}`; do
            printf "${logo[$i]:$x:1}"
            sleep $seconds
        done
        printf "\n\t"
    done
printf "\n"
}

install_luarocks() {
 echo -e "\e[38;5;142mInstalling LuaRocks\e"
  git clone https://github.com/keplerproject/luarocks.git
  cd luarocks
  git checkout tags/v2.4.2 # Current stable

  PREFIX="$THIS_DIR/.luarocks"

  ./configure --prefix=$PREFIX --sysconfdir=$PREFIX/luarocks --force-config
   make build && make install
cd ..
  rm -rf luarocks
}

install_rocks() {
     sudo ./.luarocks/bin/luarocks install socket
		 sudo ./.luarocks/bin/luarocks install https://luarocks.org/luasec-0.6-1.rockspec
		 sudo ./.luarocks/bin/luarocks install luasec
		 sudo ./.luarocks/bin/luarocks install serpent
		 sudo ./.luarocks/bin/luarocks install redis-lua
}

install2() {
  echo -e "\e[38;5;034mInstalling more dependencies\e"
	sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
	sudo apt-get --force-yes install git wget screen tmux libconfig9 libevent-dev libjansson4 libstdc++6 lua-socket lua5.2 liblua5.2 make unzip redis-server software-properties-common g++
	sudo apt install g++-4.7 -y c++-4.7 -y
	sudo apt-get install libreadline-dev -y libconfig-dev -y libssl-dev -y lua5.2 -y liblua5.2-dev -y lua-socket -y lua-sec -y lua-expat -y libevent-dev -y make unzip git redis-server autoconf g++ -y libjansson-dev -y libpython-dev -y expat libexpat1-dev -y
	sudo apt install screen -y && sudo apt install tmux -y
	sudo apt install libstdc++6 -y
	sudo apt install lua-lgi -y
	sudo apt install -y redis-server
	sudo apt install -y luarocks
	sudo apt install libnotify-dev -y
	update-alternatives —install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 —slave /usr/bin/g++ g++ /usr/bin/g++-4.9
}

torsocks() {
 echo -e "\e[38;5;035mUpdating packages\e"
	  sudo apt update -y && sudo apt upgrade -y
  echo -e "\\e[38;5;129mInstalling Tor socks proxy\e"
	  sudo apt install -y torsocks
	  sudo systemctl daemon-reload
	  sudo systemctl restart tor.service
	  sudo apt install -y tor
	  sudo systemctl daemon-reload
	  sudo systemctl restart tor.service
	  sudo apt install -y polipo
	  sudo systemctl daemon-reload
	  sudo systemctl restart tor.service
	  systemctl start tor.service
	  cat /var/log/tor/log
	service redis-server restart
	service redis-server start
  echo -e "\e[38;5;046mInstalling packages successfully\033[0;00m"
menu
}

tg() {
        wget --progress=bar:force https://valtman.name/files/telegram-cli-1124
        if [ ! -d ".telegram-cli" ]; then mkdir .telegram-cli; fi
        mv telegram-cli-1124 ./.telegram-cli/telegram-cli; chmod +x ./.telegram-cli/telegram-cli
}

conf() {
	mkdir -p "$THIS_DIR"/.telegram-cli/TG-"$1"
	cfg="$THIS_DIR"/.telegram-cli/TG-$1/TG.cfg
	TG="$THIS_DIR"/.telegram-cli/TG-$1.lua
	if [[ ! -f $cfg ]]; then
		echo "default_profile = \"TG-$1\";TG-$1 = {config_directory = \"$THIS_DIR/.telegram-cli/TG-$1\";test = false;msg_num = true;};" >> $cfg
	fi
	if [[ ! -f $TG ]]; then
		cat main.lua >> TG-$1.lua
		sed -i 's/ADS-ID/'$1'/g' TG-$1.lua
		mv TG-$1.lua ./.telegram-cli
	fi
}

install() {
logo
torsocks
chmod 777 TG
install2
rm -rf README.md
install_luarocks
  echo -e "\e[38;5;034mDownload libs\e"
install_rocks
tg
sudo apt -u update && sudo apt -y upgrade && sudo apt -y dist-upgrade && sudo apt -y autoclean && sudo apt -y autoremove
clear
logo
 echo -e "\033[38;5;034mSuccessful install\033[0;00m\n\n\n"
 echo -e "Now, you can run your bot by => \033[38;5;123m./TG 1~9\033[0;00m <= command"
 echo -e "for example: ./TG 1\n\n"
 echo -e "you can use anticrash by => \033[38;5;142mscreen -S nohup ./TG 1~9\033[0;00m <= command"
 echo -e "for example: screen -S nohup ./TG 7\n\n"
}

if [[ "$1" =~ ^[0-9]+$ ]] ; then
	conf $1
COUNTER=0
  while [ $COUNTER -lt 5 ]; do
       tmux kill-session -t TG-$1
	        tmux new-session -s TG-$1 "./.telegram-cli/telegram-cli  -p ./.telegram-cli/TG-$1/TG.cfg -s ./.telegram-cli/TG-$1.lua"
        tmux detach -s TG-$1
    sleep 1
  done
	fi
	
if [ ! -f "./.telegram-cli/telegram-cli" ]; then
    echo -e "\033[38;5;208mError! telegram-cli not found, Please reply to this message:\033[0;00m"
    read -p "Do you want to install and config? [y/n] = "
	if [ "$REPLY" == "y" ] || [ "$REPLY" == "Y" ]; then
					install
     elif [ "$REPLY" == "n" ] || [ "$REPLY" == "N" ]; then
        exit 1
  fi
fi

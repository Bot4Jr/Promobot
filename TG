#!/usr/bin/env bash

THIS_DIR=$(cd "$(dirname "$0")"; pwd)
cd "$THIS_DIR"

function logo() {
    declare -A logo
    seconds="0.002"
logo[0]="  .          '||    ||' '||'''|  '||    ||' '||'|.  '||'''|  '||''|."
logo[1]=".||.   ... .  |||  |||   || .     |||  |||   ||  ||  || .     ||   ||"
logo[2]=" ||   || ||   |'|..'||   ||'|     |'|..'||   ||''|.  ||'|     ||''|'"
logo[3]=" ||    |''    | '|' ||   ||       | '|' ||   ||   || ||       ||   |."
logo[4]=" '|.' '|||.  .|. | .||. .||....| .|. | .||. .||..|' .||....| .||.  '|'"
logo[5]="    .|...'"
logo[6]=""
logo[7]="Channel : @tgMember"
logo[8]="Develop by @sajjad_021"
printf "\e[38;5;213m\t"
    for i in ${!logo[@]}; do
        for x in `seq 0 ${#logo[$i]}`; do
            printf "${logo[$i]:$x:1}"
            sleep $seconds
        done
        printf "\n\t"
    done
printf "\n"
}

function update() {
  sudo git pull
  sudo git fetch --all
  sudo git reset --hard origin/master
  sudo git pull origin master
  sudo chmod +x TG
}

tgcli_version=1214

lualibs=(
'luasec'
'tdcli.lua'
'socket'
'luarepl'
'lbase64 20120807-3'
'luafilesystem'
'lub'
'auth'
'lua-term'
'Lua-cURL'
'multipart-post'
'lanes'
'multipart-post'
'luaexpat'
'redis-lua'
'lua-cjson'
'fakeredis'
'xml'
'dkjson'
'feedparser'
'serpent'
)

pkg=(
'git'
'wget'
'openssl'
'coreutils'
'make'
'gcc'
'libreadline-dev'
'libssl-dev'
'redis-server'
'libssl-dev'
'unzip'
'libexpat1-dev'
'libconfig-dev'
'tmux'
'lua5.2'
'liblua5.2-dev'
'lua-socket'
'lua-sec'
'lua-expat'
'libevent-dev'
'autoconf'
'g++'
'libjansson-dev'
'expat'
'luarocksv'
)

today=`date +%F`



function download_libs_lua() {
    if [[ ! -d "logs" ]]; then mkdir logs; fi
    if [[ -f "logs/logluarocks_${today}.txt" ]]; then rm logs/logluarocks_${today}.txt; fi
    local i
    for ((i=0;i<${#lualibs[@]};i++)); do
        printf "\r\33[2K"
        printf "\rtgAds: Please Wait ... [$(($i+1))/${#lualibs[@]}] ${lualibs[$i]}"
        "$HOME"/.luarocks/bin/luarocks install ${lualibs[$i]} &>> logs/logluarocks_${today}.txt
    done
    sleep 0.2
    printf "\nLogfile created: $PWD/logs/logluarocks_${today}.txt\nDone\n"
    rm -rd logs; rm -rf log.txt; rm -rf README.md
}

function configure() {
    if [[ -f "/usr/bin/lua5.3" ]] || [[ -f "/usr/bin/lua5.1" ]] || [[ -f "/usr/local/bin/lua5.3" ]]; then
    	sudo apt remove -y lua5.3 &>/dev/null
	    sudo apt -y autoremove &>/dev/null
	    sudo apt install -y lua5.2 &>/dev/null
      echo -e "\n\033[0;31m TeleGram Advertising Download Libs ... \033[0m\n"
     fi
  	git clone https://github.com/keplerproject/luarocks.git &>/dev/null
  	cd luarocks
	
  	PREFIX="$HOME/.luarocks"

  	./configure --prefix="$PREFIX" --sysconfdir="$PREFIX"/luarocks --force-config &>/dev/null
  	make build &>/dev/null
		sudo make install &>/dev/null

		cd ..
		rm -rf luarocks
    if [[ ${1} != "--no-download" ]]; then
        download_libs_lua
    fi
    for ((i=0;i<101;i++)); do
        printf "\rConfiguring... [%i%%]" $i
        sleep 0.007
    done
    printf "\nDone\n"
}

function installation() {
for i in $(seq 1 100); do  
    sleep 0.1
    sudo apt-get -y install $pkg &>> log.txt
    if [ $i -eq 100 ]; then
        echo -e "XXX\n100\nDone!\nXXX"
    elif [ $(($i % 4)) -eq 0 ]; then
        let "is = $i / 4"
        echo -e "XXX\n$i\n${pkg[is]}\nXXX"
    else
        echo $i
    fi 
done | whiptail --title 'TeleGram Advertising Install Packages' --gauge "${pkg[0]}" 6 60 0
}


tgcli_config() {
tgdr="$THIS_DIR"/.TG-$1
if [ ! -d $tgdr ]; then
  mkdir -p "$THIS_DIR"/.TG-$1
  printf '%s\n' "
default_profile = \"TG-$1\";
TG-$1 = {
  config_directory = \"$THIS_DIR/.TG-$1\";
  auth_file = \"$THIS_DIR/.TG-$1/auth\";
  test = false;
  msg_num = true;
  log_level = 2;
};
" > "$THIS_DIR"/.TG-$1/tg-cli.config
fi
}

conf1() {
  cli="$THIS_DIR"/.TG-$1/TG-$1.lua
if [[ ! -f "$THIS_DIR"/.TG-$1/"$cli" ]]; then
echo "package.path = package.path..';../.luarocks/share/lua/5.2/?.lua;../.luarocks/share/lua/5.2/?/init.lua'
package.cpath = package.cpath..';../.luarocks/lib/lua/5.2/?.so'

redis = require('redis')
redis = redis.connect('127.0.0.1', 6379)

Ads_id = '$1'

require('TG')

function dl_cb (arg, data)
end

function tdcli_update_callback(data)
	Doing(data, Ads_id)
end" >> $cli
fi
}

conf2() {
  api="$THIS_DIR"/.TG-$1/AP-$1.lua
if [[ ! -f "$THIS_DIR"/.TG-$1/"$api" ]]; then
echo "package.path = package.path..';../.luarocks/share/lua/5.2/?.lua;../.luarocks/share/lua/5.2/?/init.lua'
package.cpath = package.cpath..';../.luarocks/lib/lua/5.2/?.so'

redis = require('redis')
redis = redis.connect('127.0.0.1', 6379)
require('dkjson')
URL = require('socket.url')
ltn12 = require('ltn12')
http = require('socket.http')
lgi = require('lgi')
https = require('ssl.https')
json = require('dkjson')
serpent = require('serpent')
notify = lgi.require('Notify')
notify.init ('Telegram updates')
chats = {}
day = 86400

Ads_id = '$1'

require('API')" >> $api
fi
}

conf3() {
AP="$THIS_DIR"/AP-$1
if [ ! -f $AP ]; then
 echo -e "\n\033[38;5;27mYou must enter the token to create API robot : \n\033[38;5;208m\n\033[6;48m\n"
read -rp '' TKN
 echo "#!/bin/bash
	while true; do
       		sudo tmux kill-session -t AP-$1
			sudo tmux new-session -s AP-$1 './telegram-cli --disable-link-preview -R -C -v -s ./.TG-$1/AP-$1.lua -I -l 1 -E -c ./.TG-$1/tg-cli.config -p AP-$1 --bot=$TKN -L "$THIS_DIR"/.TG-$1/api.txt'
        	sudo tmux detach -s AP-$1
	done" >> AP-$1
	chmod 777 AP-$1
echo -e "\n\033[0;00m\n"
fi
}

if [[ "$1" =~ ^[0-9]+$ ]] ; then
 tgcli_config $1
 conf1 $1
 conf3 $1
 conf2 $1
  while true; do
       sudo tmux kill-session -t TG-$1
		sudo tmux new-session -s TG-$1 "./telegram-cli --disable-link-preview -R -C -v -s ./.TG-$1/TG-$1.lua -I -l 1 -E -c ./.TG-$1/tg-cli.config -p TG-$1 -L "$THIS_DIR"/.TG-$1/log.txt"
        sudo tmux detach -s TG-$1
  done
fi

if [ "$1" = "upgrade" ]; then
update
fi

if [ ! -f "telegram-cli" ]; then
  chmod 777 TG
	logo
	installation
  configure
	wget "https://valtman.name/files/telegram-cli-1214" &>/dev/null
	mv telegram-cli-1214 telegram-cli; chmod +x telegram-cli
	rm -rd logs
	rm -rf README.md
	echo -e "\n\n\033[1;33mInstall Complete\033[0;00m\n"
  sudo service redis-server restart
  sudo service redis-server start
  echo -e "\n\nCreate and Launch bot => \033[1;32mscreen -S nohup ./TG 1~9\033[0;00m\n"
fi
